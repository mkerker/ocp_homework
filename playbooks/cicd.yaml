#
# cicd.yaml
#
# 2.4. CICD Workflow

# Jenkins pod is running in a project called cicd-dev with a persistent volume
# Jenkins deploys openshift-tasks app with a buildconfig called tasks-bc
# Jenkins OpenShift plugin is used in the buildconfig to create a CICD workflow
# Use tasks-build as your project for building. Do promotion between projects tasks-dev, tasks-test, and tasks-prod as your project names.
# HPA called tasks-hpa is configured and working on production deployment of openshift-tasks in project tasks-prod.


---
- name: Jenkins Setup
  hosts: localhost
  become: yes
  vars:
    jenkins_project: cicd-dev
    jenkins_app: jenkins-persistent
    dev_project: tasks-dev
    test_project: tasks-test
    prod_project: tasks-prod
    build_project: tasks-build
    build_tasks: tasks-bc
  tasks:
    - name: "Projects are created"
      shell: "oc adm new-project {{ item }}"
      with_items:
        - "{{ dev_project }}"
        - "{{ test_project }}"
        - "{{ prod_project }}"
        - "{{ build_project }}"
        - "{{ jenkins_project }}"

    - name: "Jenkins application is deployed to {{ jenkins_project }} project"
      shell: "oc new-app jenkins-persistent --param ENABLE_OAUTH=true --param MEMORY_LIMIT=2Gi --param VOLUME_CAPACITY=4Gi -n {{ jenkins_project }}"

    - name: "Wait for Jenkins to be up"
      shell: "oc get pods -n {{ jenkins_project }} | grep ^jenkins"
      register: result
      until: result.stdout.find("Running") != -1
      retries: 5
      delay: 10

    - name: "Setup jenkins permissions"
      shell: "oc policy add-role-to-user edit system:serviceaccount:{{ jenkins_project }}:jenkins -n {{ item }}"
      register: var
      with_items:
        - "{{ dev_project }}"
        - "{{ test_project }}"
        - "{{ prod_project }}"
        - "{{ build_project }}"
      tags:
        - perms

#    - name: "Images can be pulled from {{ build_project }}"
#      shell: "oc policy add-role-to-group system:image-puller -n {{ build_project }} system:serviceaccounts:{{ item }}"
#      with_items:
#        - "{{ dev_project }}"
#        - "{{ test_project }}"
#        - "{{ prod_project }}"
#      tags:
#        - perms

    - name: "Openshift-tasks Template and ImageStream are imported"
      shell: "{{ item }}"
      with_items:
        - oc project openshift; oc apply -f https://raw.githubusercontent.com/OpenShiftDemos/openshift-tasks/master/app-template.yaml
        - oc project openshift; oc apply -f https://raw.githubusercontent.com/jboss-openshift/application-templates/master/eap/eap64-image-stream.json

    - name: "Application openshift-tasks is deployed to {{ build_project }}"
      shell: "oc new-app openshift-tasks -n {{ build_project }}"

    - name: "DC is created"
      shell: "oc create -f ../files/ot.yml -n {{ item }}; oc new-app {{ item }}/openshift-tasks -n {{ item }}"
      with_items:
        - "{{ dev_project }}"
        - "{{ test_project }}"
        - "{{ prod_project }}"

    - name: "Jenkins pipeline is imported to {{ jenkins_project }}"
      shell: "oc project {{ jenkins_project }}; oc create -f ../files/tasks-bc.yml"

    - name: "Jenkins pipeline {{ build_tasks }} is execeuted"
      shell: "oc start-build {{ build_tasks }} --follow"
